# Dashboard Interativo de M√©tricas

## Descri√ß√£o
Este √© um projeto de dashboard interativo desenvolvido para exibir m√©tricas de funcion√°rios. Ele consiste em um frontend em React.js e um backend em Spring Boot com PostgreSQL.

## Tecnologias Utilizadas

### Backend:
- Java (Spring Boot)
- PostgreSQL
- JPA/Hibernate
- Spring Web

### Frontend:
- React.js
- Styled Components
- Axios
- Recharts (para gr√°ficos)

## Estrutura do Projeto

### Backend (`src/main/java/com/dashboard`)

- `EmployeeMetric.java`: Classe modelo representando uma m√©trica de funcion√°rio.
- `EmployeeMetricRepository.java`: Interface do reposit√≥rio para acessar o banco de dados.
- `EmployeeMetricController.java`: Controlador REST para gerenciar requisi√ß√µes HTTP.
- `EmployeeMetricApiApplication.java`: Classe principal para rodar a aplica√ß√£o.

### Frontend (`src/`)

- `components/`
  - `Navbar.js`: Barra de navega√ß√£o.
  - `MetricsChart.js`: Componente de gr√°ficos.
  - `Filters.js`: Filtros de m√©tricas.
  - `MetricsTable.js`: Tabela de m√©tricas dos funcion√°rios.
- `pages/`
  - `Dashboard.js`: P√°gina principal do dashboard.
- `api.js`: Configura√ß√£o do Axios para chamadas ao backend.
- `App.js`: Arquivo principal que gerencia a renderiza√ß√£o dos componentes.
- `index.js`: Ponto de entrada do React.

## Funcionalidades Implementadas

‚úÖ Exibi√ß√£o de m√©tricas de funcion√°rios em gr√°ficos e tabela.
‚úÖ Comunica√ß√£o entre frontend e backend via API REST.
‚úÖ Filtros b√°sicos por nome.
‚úÖ Integra√ß√£o com banco de dados PostgreSQL.
‚úÖ Estiliza√ß√£o inicial da interface com Styled Components.

## Como Rodar o Projeto

### Backend
1. Certifique-se de ter o Java e o PostgreSQL instalados.
2. Crie um banco de dados chamado `dashboard_db`.
3. Configure o `application.properties` em `src/main/resources` com as credenciais do banco.
4. No terminal, dentro do diret√≥rio do backend, execute:
   ```sh
   mvn spring-boot:run
   ```

### Frontend
1. Instale as depend√™ncias com:
   ```sh
   npm install
   ```
2. Inicie o frontend com:
   ```sh
   npm start
   ```
3. Acesse `http://localhost:3000` no navegador.

## Pr√≥ximos Passos
- Melhorar os filtros para permitir buscas por departamento e outros crit√©rios.
- Implementar exporta√ß√£o de dados (CSV e PDF).
- Atualiza√ß√£o autom√°tica dos dados em tempo real.
- Implementa√ß√£o de autentica√ß√£o com login.

---

Esse README serve como refer√™ncia at√© onde chegamos no projeto. Agora podemos avan√ßar para os pr√≥ximos passos com seguran√ßa! üöÄ

